let handler = async (m, { conn, args, usedPrefix, command }) => {
  conn.relayMessage(m.chat, {
    viewOnceMessage: {
      message: {
        interactiveMessage: {
          header: {
            title: '*Ø§Ù„Ù…Ø·ÙˆØ± Ø§Ù„ÙˆÙƒØ§Ø±Ø¯*'
          },
          body: {
            text: '*ðŸ¦‡Ù‡Ù†Ø§ ØªØ¬Ø¯ ÙƒÙ„ Ù…Ø§ ÙŠØªØ¹Ù„Ù‚ Ø¨Ø§Ù„Ù…Ø·ÙˆØ±ðŸ¦‡*'
          },
          nativeFlowMessage: {
            buttons: [
              {
                name: 'single_select',
                buttonParamsJson: JSON.stringify({
                  title: 'ðŸ¦‡Ù‚Ø§Ø¦Ù…Ø© Ù…Ø¹Ù„ÙˆÙ…Ø§Øª Ø§Ù„ÙˆÙƒØ§Ø±Ø¯ðŸ¦‡',
                  sections: [
                    {
                      title: 'List',
                      highlight_label: 'ON',
                      rows: [
                        {
                          header: 'Ø§Ø¶ØºØ· Ù‡Ù†Ø§ Ù…Ù† Ø§Ø¬Ù„ ðŸ‘‡',
                          title: 'Ø±Ù‚Ù… Ø§Ù„Ù…Ø·ÙˆØ±',
                          description: '',
                          id: '.Ù…Ø§Ù„Ùƒ'
                        },
                                      {
                          header: 'Ø§Ø¶ØºØ· Ù‡Ù†Ø§ Ù…Ù† Ø§Ø¬Ù„ ðŸ‘‡',
                          title: 'Ø§Ù†Ø³ØªØ§ Ø§Ù„Ù…Ø·ÙˆØ±',
                          description: '',
                          id: '.Ø§Ù†Ø³ØªØ§'
                        },
                        {
                          header: 'Ø§Ø¶ØºØ· Ù‡Ù†Ø§ Ù…Ù† Ø§Ø¬Ù„ ðŸ‘‡',
                          title: 'Ø¬Ø±ÙˆØ¨ Ø§Ù„Ø¯Ø¹Ù…',
                          description: '',
                          id: '.Ø§Ù„Ø¯Ø¹Ù…'
                        }
                      ]
                    }
                  ]
                }),
                messageParamsJson: 'Ø±'
              }
            ]
          }
        }
      }
    }
  }, {})

}

handler.help = ['info']
handler.tags = ['main']
handler.command = ['Ø§Ù„Ù…Ø·ÙˆØ±']

export default handler
